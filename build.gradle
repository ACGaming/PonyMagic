buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		maven {
            name 'mc4ep'
            url 'http://maven.mc4ep.ru/repository/minecraft/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id "com.palantir.git-version" version "0.11.0"
    id "com.github.johnrengelman.shadow" version "2.0.1"
    id "maven"
}
apply plugin: 'net.minecraftforge.gradle.forge'

def gitVersionName() {
    def details = versionDetails()
    if (details.isCleanTag) {
        return "$details.lastTag"
    } else {
        return "$details.lastTag-SNAPSHOT-$details.gitHash"
    }
}

def modName = "Pony Magic"
def modUrl = "https://gitlab.com/mc4ep/pony-magic"
def modDescription = """Some pony magic"""

group = "net.braunly"
archivesBaseName = "ponymagic"
version = gitVersionName()

compileJava {
    sourceCompatibility = targetCompatibility = 1.8
}


minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"
    mappings = mcp_mappings
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.0.0'
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: '4.1.0-rc2'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Fill mcmod.info template
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand  'version': project.version,
                'mcversion': project.minecraft.version,
                'modid': project.archivesBaseName,
                'name': modName,
                'description': modDescription,
                'url': modUrl
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    include { sourceSets.main.output.classesDir }
    zip64 true
}

shadowJar {
    dependencies {
        exclude(dependency("org.projectlombok:lombok"))
    }
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "http://maven.mc4ep.ru/repository/internal/") {
            authentication(
                    userName: project.hasProperty('repoLogin') ? repoLogin : null,
                    password: project.hasProperty('repoPassword') ? repoPassword: null
            )
        }
        pom.project {
            name modName
            description modDescription
            url modUrl
        }
    }
}
