buildscript {
    repositories {
        mavenCentral()
        maven {
            name 'mc4ep'
            url 'http://maven.mc4ep.ru/repository/minecraft/'
        }
        maven {
            name "sonatype"
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle',version: '1.2.0.777'
    }
}


plugins {
    id "com.palantir.git-version" version "0.7.3"
}
apply plugin: 'forge'
apply plugin: 'maven'

def gitVersionName() {
    def details = versionDetails()
    if (details.isCleanTag) {
        return "$details.lastTag"
    } else {
        return "$details.lastTag-$details.gitHash-SNAPSHOT"
    }
}

def modName = "Pony Magic"
def modUrl = "https://gitlab.com/mc4ep/pony-magic"
def modDescription = """Some pony magic"""

group = "net.braunly" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ponymagic"
version = gitVersionName()

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Fill mcmod.info template
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand  'version': project.version,
                'mcversion': project.minecraft.version,
                'modid': project.archivesBaseName,
                'name': modName,
                'description': modDescription,
                'url': modUrl
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    include { sourceSets.main.output.classesDir }
    zip64 true
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "http://maven.mc4ep.ru/repository/internal/") {
            authentication(
                    userName: project.hasProperty('repoLogin') ? repoLogin : null,
                    password: project.hasProperty('repoPassword') ? repoPassword: null
            )
        }
        pom.project {
            name modName
            description modDescription
            url modUrl
        }
    }
}
